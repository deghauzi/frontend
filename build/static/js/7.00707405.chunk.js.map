{"version":3,"sources":["components/containers/dashboard/views/dashboard/contributions/WithdrawalForm.js"],"names":["numeral","require","ProjectForm","history","dispatch","useDispatch","useEffect","load_user","fetchBankAccountMain","fetchBankAccountBonus","auctionState","useSelector","state","commonReducer","balanceState","contributionReducer","mainAccount","bonusAccount","loading","useState","request_expected_date","request_reasons","request_amount","request_from_account","formValue","SetformValue","handleChange","e","target","name","value","prev","Main","parseInt","bank_account_balance","Wallet","wallet_balance","activeStep","setActiveStep","steps","getPersonalInformation","className","type","placeholder","onChange","getDate","getAmount","format","handleBack","prevActiveStep","onSubmit","preventDefault","withdrawalRequestSubmit","alternativeLabel","map","label","index","length","stepIndex","getStepContent","disabled","onClick","color","push","variant","setTimeout"],"mappings":"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","file":"static/js/7.00707405.chunk.js","sourcesContent":["import React, { useState,useEffect } from \"react\";\r\nimport axiosInstance from \"util/api\";\r\nimport { setLoading, offLoading } from \"store/actions/Common\";\r\nimport * as actionTypes from \"store/actions/ActionTypes\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Stepper from \"@material-ui/core/Stepper\";\r\nimport Step from \"@material-ui/core/Step\";\r\nimport StepLabel from \"@material-ui/core/StepLabel\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport CircularProgress from \"util/CircularProgress\";\r\nimport { load_user } from 'store/actions/Auth.js';\r\nimport { tokenConfig } from 'util/TokenConfig';\r\nimport { fetchBankAccountBonus, fetchBankAccountMain, withdrawalRequestSubmit } from \"store/actions/Contributions\";\r\n\r\nvar numeral = require(\"numeral\");\r\n\r\nconst ProjectForm = ({history}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n     dispatch(load_user());\r\n    dispatch(fetchBankAccountMain());\r\n    dispatch(fetchBankAccountBonus());\r\n  }, [])\r\n\r\n  const auctionState = useSelector((state) => state.commonReducer);\r\n  const balanceState = useSelector((state) => state.contributionReducer);\r\n  const {mainAccount,bonusAccount} = balanceState\r\n  const { loading } = auctionState;\r\n  const [formValue, SetformValue] = useState({\r\n    request_expected_date:\"\",\r\n    request_reasons:\"\",\r\n    request_amount: \"\",\r\n    request_from_account:\"\",\r\n  })\r\n const handleChange = (e) => {\r\n    const { name, value } = e.target;\r\n    SetformValue((prev) => ({ ...prev, [name]: value }));\r\n  };\r\n  \r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    dispatch(withdrawalRequestSubmit({...formValue}));\r\n  };\r\n\r\n  const Main = formValue.request_from_account === 'Main' && parseInt(formValue.request_amount) >= parseInt(mainAccount[0].bank_account_balance)\r\n  const Wallet = formValue.request_from_account === 'Wallet' && parseInt(formValue.request_amount) >= parseInt(bonusAccount.wallet_balance)\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const getSteps = () => {\r\n    return [\"Reason\", \"Amount\", \"Date\"];\r\n  };\r\n\r\n  const steps = getSteps();\r\n  const getStepContent = (stepIndex) => {\r\n    switch (stepIndex) {\r\n      case 0:\r\n        return getPersonalInformation();\r\n      case 1:\r\n        return getAmount();\r\n      case 2:\r\n        return getDate();\r\n      default:\r\n        return \"Uknown stepIndex\";\r\n    }\r\n  };\r\n\r\n  const getPersonalInformation = () => {\r\n    return (\r\n      <fieldset>\r\n        <h2 className=\"fs-title text-uppercase font-weight-bold\">Reason For Withdrawal</h2>\r\n        <input\r\n          type=\"textarea\"\r\n          className=\"input-textarea\"\r\n          name=\"request_reasons\"\r\n          placeholder=\"breif reasons for withdrawal\"\r\n            onChange={handleChange}\r\n        />\r\n      </fieldset>\r\n    );\r\n  };\r\n\r\n  const getDate = () => {\r\n    return (\r\n      <fieldset>\r\n        <h2 className=\"fs-title mt-4 text-uppercase font-weight-bold\">Request Expected Date</h2>\r\n        <input onChange={handleChange} type=\"date\" name=\"request_expected_date\" className=\"input-date\" />\r\n      </fieldset>\r\n    );\r\n  };\r\n\r\n  const getAmount = () => {\r\n    return (\r\n      <fieldset>\r\n        <select name=\"request_from_account\" className=\"input-textarea\"onChange={handleChange}>\r\n            <option>Select Account</option>\r\n            <option value=\"Main\">Main</option>\r\n            <option value=\"Wallet\">Wallet</option>\r\n          </select>\r\n        <h2 className=\"fs-title text-uppercase font-weight-bold\">Amount</h2>\r\n        <input\r\n          type=\"text\"\r\n          className=\"input-text\"\r\n          placeholder=\"amount needed?\"\r\n          name=\"request_amount\"\r\n          onChange={handleChange}\r\n        />\r\n        {Main ?\r\n          <p className='text-danger'>amount can't be greater than balance: ₦{numeral(mainAccount[0].bank_account_balance).format(\"0,0\")}</p> :\r\n          Wallet ? <p className='text-danger'>amount can't be greater than balance: ₦{numeral(bonusAccount.wallet_balance).format(\"0,0\")}</p>:null}\r\n      </fieldset>\r\n    );\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n  const handleReset = () => {\r\n    setActiveStep(0);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex mt-5 justify-content-center\">\r\n        <form onSubmit={handleSubmit} className=\"fundforms_container\">\r\n          <div>\r\n            <Stepper activeStep={activeStep} alternativeLabel className=\"horizontal-stepper-linear\">\r\n              {steps.map((label, index) => {\r\n                return (\r\n                  <Step\r\n                    key={label}\r\n                    className={`horizontal-stepper ${index === activeStep ? \"active\" : \"\"}`}\r\n                  >\r\n                    <StepLabel className=\"stepperlabel\">{label}</StepLabel>\r\n                  </Step>\r\n                );\r\n              })}\r\n            </Stepper>\r\n\r\n            <div>\r\n              {activeStep !== steps.length ? (\r\n                <div>\r\n                  {getStepContent(activeStep)}\r\n                  <div className=\"mt-4\">\r\n                    {activeStep !== 0 && (\r\n                      <Button\r\n                        disabled={activeStep === 0}\r\n                        onClick={handleBack}\r\n                        className=\"mr-2 float-left\"\r\n                        color=\"primary\"\r\n                      >\r\n                        Back\r\n                      </Button>\r\n                    )}\r\n                    <Button\r\n                      className=\"mr-2 float-left\"\r\n                      color=\"primary\"\r\n                      onClick={() => { history.push(\"/\"); SetformValue({})}}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                    <Button\r\n                      className=\"mr-2 float-right\"\r\n                      variant=\"contained\"\r\n                      color=\"primary\"\r\n                      onClick={handleNext}\r\n                    >\r\n                      {activeStep === steps.length - 1 ? \"Finish\" : \"Next\"}\r\n                    </Button>\r\n                  </div>\r\n                </div>\r\n              ) : (\r\n                  <>\r\n                    <Button\r\n                      disabled={activeStep === 0}\r\n                      onClick={handleBack}\r\n                      className=\"mr-2 float-left\"\r\n                      color=\"primary\"\r\n                    >\r\n                      Back\r\n                  </Button>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      name=\"submit\"\r\n                      className=\"MuiButton-containedPrimary\"\r\n                      disabled={formValue.request_amount === '' || formValue.request_expected_date=== '' ||\r\n                        formValue.request_from_account === '' || formValue.request_reasons === ''||\r\n                        // parseInt(formValue.request_amount) >= parseInt(bonusAccount.wallet_balance)\r\n                        parseInt(formValue.request_amount) >= parseInt(mainAccount[0].bank_account_balance)\r\n                      }\r\n                      onClick={() => {\r\n                        setTimeout(() => {\r\n                          handleReset();\r\n                        }, 5000);\r\n                      }}\r\n                    >\r\n                      {loading ? <CircularProgress/>: \"Submit\"}\r\n                    </Button>\r\n                    {Main ?\r\n          <p className='text-danger'>amount can't be greater than balance: ₦{numeral(mainAccount[0].bank_account_balance).format(\"0,0\")}</p> :\r\n          Wallet ? <p className='text-danger'>amount can't be greater than balance: ₦{numeral(bonusAccount.wallet_balance).format(\"0,0\")}</p>:null}\r\n                  </>\r\n                )}\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProjectForm\r\n;"],"sourceRoot":""}